apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: parking-automation
  namespace: default
  labels:
    app-container: "parking-automation"
  annotations:
    app.oam.dev/description: "Automated parking system with real-time availability and chat interface"
    app.oam.dev/version: "v1.0.0"
spec:
  components:
  # Main parking automation service
  - name: parking-automation
    type: webservice
    properties:
      name: parking-automation
      image: healthidpuaeacr.azurecr.io/parking-automation:latest
      language: python
      framework: fastapi
      port: 8080
      healthPath: /health
      database: postgres
      cache: redis
      repository: parking-automation

  # Reservation service for managing parking reservations
  - name: reservation-service
    type: webservice
    properties:
      name: reservation-service
      image: docker.io/socrates12345/reservation-service:latest
      language: python
      framework: fastapi
      port: 8080
      healthPath: /health
      database: postgres
      cache: redis
      repository: parking-automation

  # User Service (Authentication, Profile Management)
  - name: user-service
    type: webservice
    properties:
      name: user-service
      image: docker.io/socrates12345/parking-user-service:latest
      language: python
      framework: fastapi
      port: 8080
      healthPath: /health
      database: postgres
      cache: redis
      repository: parking-automation
      version: v1.0.0
      resources:
        cpu: "500m"
        memory: "1Gi"
      environment:
        SERVICE_NAME: "user-service"
        LOG_LEVEL: "INFO"
        JWT_SECRET_KEY: "from-secret"
        JWT_ALGORITHM: "RS256"
        ACCESS_TOKEN_EXPIRE_MINUTES: "15"
        REFRESH_TOKEN_EXPIRE_DAYS: "7"
        OAUTH_GOOGLE_CLIENT_ID: "from-secret"
        OAUTH_APPLE_CLIENT_ID: "from-secret"
        OAUTH_FACEBOOK_CLIENT_ID: "from-secret"
        STRIPE_PUBLISHABLE_KEY: "from-secret"
      envFrom:
        - secretRef:
            name: user-service-secrets
      enableGraphQLFederation: true
      openApiPath: /api/v1/openapi.json
      apiVersion: v1

  # Deploy to host cluster (no vCluster topology)
  # This allows immediate deployment without vCluster dependency
